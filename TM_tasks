*** *** *** JDK 1.7 НАБОР ПРАКТИЧЕСКИХ ЗАДАНИЙ  *** *** ***
*** *** *** JAVA SE & EE SPRING FRAMEWORK       *** *** ***

1 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-01                                                                                            ОК

1.1 РАЗРАБОТАТЬ КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ                                                                                   ОК
    1.1.1 РЕАЛИЗОВАТЬ ТОЧКУ ВХОДА PSVM                                                                                  ОК
    1.1.2 РЕАЛИЗОВАТЬ ОБРАБОТКУ ТЕРМИНАЛЬНЫХ КОМАНД                                                                     ОК
1.2 РЕАЛИЗОВАТЬ УПРАВЛЕНИЕ ПРОЕКТАМИ                                                                                    ОК
    1.2.1 СОЗДАНИЕ ПРОЕКТА                                                                                              ОК
    1.2.2 ПРОСМОТР ПРОЕКТА / ПРОЕКТОВ                                                                                   ОК
    1.2.3 РЕДАКТИРОВАНИЕ ПРОЕКТА                                                                                        ОК
    1.2.4 УДАЛЕНИЕ ПРОЕКТА                                                                                              ОК
1.3 РЕАЛИЗОВАТЬ ВЫЗОВ СПРАВКИ                                                                                           ОК
    1.3.1 ПРИ НАБОРЕ "HELP" ВЫВОДИТСЯ СПИСОК КОМАНД                                                                     ОК
    1.3.2 СОЗДАНИЕ ЗАДАЧИ                                                                                               ОК
    1.3.3 ПРОСМОТР ЗАДАЧИ / ЗАДАЧ                                                                                       ОК
    1.3.4 РЕДАКТИРОВАНИЕ ЗАДАЧИ                                                                                         ОК
    1.3.5 УДАЛЕНИЕ ЗАДАЧИ                                                                                               ОК
1.4 РЕАЛИЗОВАТЬ СПРАВОЧНУЮ КОМАНДУ                                                                                      ОК
    1.4.1 ВЫВОДИТЬ СПИСОК ДОСТУПНЫХ КОМАНД                                                                              ОК
1.5 РЕКОМЕНДАЦИИ                                                                                                        ОК
    1.5.1 ИСПОЛЬЗОВАТЬ ТОЛЬКО ВОЗМОЖНОСТИ JAVA SE                                                                       ОК
    1.5.2 ИСПОЛЬЗОВАТЬ MAVEN-ПРОЕКТ ДЛЯ СБОРКИ                                                                          ОК
    1.5.3 РАСПРЕДЕЛИТЬ КОД ПО НЕСКОЛЬКИМ КЛАССАМ                                                                        ОК
1.5.4 КЛАССЫ ПРИЛОЖЕНИЯ ХРАНИТЬ ВО ВЛОЖЕННОМ ПАКЕТЕ "ru./ВАША ФАМИЛИЯ/.tm"                                              ОК
1.5.5 СОБЛЮДАТЬ ТРЕБОВАНИЯ К ИМЕНОВАНИЮ В JAVA                                                                          ОК

2 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-02                                                                                            ОК

2.1 СОЗДАТЬ GIT-РЕПОЗИТОРИЙ                                                                                             ОК
2.2 СОЗДАТЬ APACHE MAVEN ПРОЕКТ                                                                                         ОК
    2.2.1 ДОБАВИТЬ ИНФОРМАЦИЮ О РАЗРАБОТЧИКЕ В СЕКЦИЮ "developers"                                                      ОК
2.3 ДОБАВИТЬ GITIGNORE ДЛЯ НЕНУЖНЫХ ФАЙЛОВ В РЕПОЗИТОРИИ                                                                ОК
    2.3.1 ДОБАВИТЬ В ИГНОР ПАПКИ С БИНАРНЫМИ ФАЙЛАМИ СБОРКИ ПРОЕКТА ("out", "bin", "targer")                            ОК
    2.3.2 ДОБАВИТЬ В ИГНОР ФАЙЛЫ И ПАПКИ ПРОЕКТА IDE (".idea", ".iml")                                                  ОК
    2.3.3 УБЕДИТЬСЯ В ОТСУТСТВИИ НЕНУЖНЫХ ФАЙЛОВ В РЕПОЗИТОРИИ ИСХОДНОГО КОДА                                           ОК
    2.3.4 УБЕДИТЬСЯ В ПРИСУТСТВИИ ВСЕХ КЛАССОВ ПРИЛОЖЕНИЯ В РЕПОЗИТОРИИ                                                 ОК
2.4 ДОБАВИТЬ ПРОЕКТНУЮ ДОКУМЕНТАЦИЮ В ФАЙЛ README.MD                                                                    ОК
    2.4.1 ДОБАВИТЬ ТРЕБОВАНИЯ К SOFTWARE                                                                                ОК
    2.4.2 ДОБАВИТЬ ОПИСАНИЕ СТЕКА ТЕХНОЛОГИЙ                                                                            ОК
    2.4.3 ДОБАВИТЬ ИМЯ РАЗРАБОТЧИКА И КОНТАКТЫ                                                                          ОК
    2.4.4 ДОБАВИТЬ КОМАНДЫ ДЛЯ СБОРКИ ПРИЛОЖЕНИЯ                                                                        ОК
    2.4.5 ДОБАВИТЬ КОМАНДЫ ДЛЯ ЗАПУСКА ПРИЛОЖЕНИЯ                                                                       ОК
2.5 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ЗАПУСКАТЬ ПРИЛОЖЕНИЕ ИЗ КОНСОЛИ                                                             ОК
    2.5.1 ДОБАВИТЬ MAVEN-ПЛАГИН ДЛЯ ГЕНЕРАЦИИ МАНИФЕСТА ПРИЛОЖЕНИЯ С УКАЗАНИЕМ ТОЧКИ ВХОДА                              ОК
    2.5.2 ПРОВЕРИТЬ ЗАПУСК ПРИЛОЖЕНИЯ ИЗ КОНСОЛЬНОГО ОКРУЖЕНИЯ В ОПЕРАЦИОННОЙ СИСТЕМЕ                                   ОК
    2.5.3 РЕАЛИЗОВАТЬ ЛОГИКУ CRUD-ОПЕРАЦИЙ В ОТДЕЛЬНЫХ МЕТОДАХ ДЛЯ УПРАВЛЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТЬЮ                       ОК
    2.5.4 ИСПОЛЬЗОВАТЬ ЭКЗЕМПЛЯРЫ КЛАССОВ ВМЕТО СТАТИЧЕСКИХ МЕТОДОВ ДЛЯ ВЫЗОВА ФУНКЦИОНАЛА                              ОК
    2.5.5 ИСПОЛЬЗОВАТЬ DATE FORMATTER ДЛЯ РАБОТЫ С ДАТОЙ В ФОРМАТЕ DD.MM.YYYY                                           ОК

3 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-03                                                                                            ОК

3.1 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     ОК
    3.1.1 ВЫНЕСТИ ЛОГИКУ ТЕРМИНАЛЬНЫХ КОМАНД В ОТДЕЛЬНЫЕ МЕТОДЫ
    3.1.2 ЗАМЕНИТЬ СТРОЧНЫЕ ЛИТЕРАЛЫ НА КОНСТАНТЫ ДЛЯ ТЕРМИНАЛЬНЫХ КОМАНД                                               ОК
    3.1.3 ЗАМЕНИТЬ УСЛОВНЫЕ БЛОКИ С ОТРИЦАНИЕМ НА SWITCH ДЛЯ ВЫБОРА ТЕРМИНАЛЬНОЙ КОМАНДЫ                                ОК
3.2 РАЗРАБОТАТЬ ПРЕДМЕТНУЮ ОБЛАСТЬ                                                                                      ОК
3.3 ВЫДЕЛИТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ ПРОЕКТА                                                                                ОК
    3.3.1 СОЗДАТЬ ПОЛЯ "ID", "НАЗВАНИЕ", "ОПИСАНИЕ", "ДАТА НАЧАЛА", "ДАТА ОКОНЧАНИЯ"                                    ОК
3.4 ВЫДЕЛИТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ ЗАДАЧИ                                                                                 ОК
    3.4.1 СОЗДАТЬ ПОЛЯ "ID", "НАЗВАНИЕ", "ОПИСАНИЕ", "ДАТА НАЧАЛА", "ДАТА ОКОНЧАНИЯ", "ID ПРОЕКТА"                      ОК
3.5 РЕАЛИЗОВАТЬ ЗАВЕРШЕНИЕ ПРИЛОЖЕНИЯ ПО ТЕРМИНАЛЬНОЙ КОМАНДЕ "EXIT"                                                    ОК
    3.5.1 ПЕРЕЙТИ НА ИСПОЛЬЗОВАНИЕ ТОЛЬКО ОДНОГО БЕСКОНЕЧНОГО ЦИКЛА В ГЛАВНОМ ПОТОКЕ ПРИЛОЖЕНИЯ                         ОК
3.6 ДОБАВИТЬ ТЕКСТОВОЕ ОПИСАНИЕ ДЛЯ ТЕРМИНАЛЬНЫХ КОМАНД ПРИ ВЫЗОВЕ СПРАВКИ                                              ОК
    3.6.1 ПРИ ВЫЗОВЕ СПРАВКИ ДОЛЖНО ОТОБРАЖАТЬСЯ ОПИСАНИЕ ДЛЯ КАЖДОЙ ТЕРМИНАЛЬНОЙ КОМАНДЕ                               ОК
3.7 РЕАЛИЗОВАТЬ СВЯЗЬ ЗАДАЧИ С ПРОЕКТОМ                                                                                 ОК
    3.7.1 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ПРИКРЕПЛЕНИЯ ЗАДАЧИ К ВЫБРАННОМУ ПРОЕКТУ                                              ОК
    3.7.2 РЕАЛИЗОВАТЬ ПРОСМОТР ВСЕХ ЗАДАЧ ПО ВЫБРАННОМУ ПРОЕКТУ                                                         ОК
    3.7.3 РЕАЛИЗОВАТЬ АВТОМАТИЧЕСКОЕ УДАЛЕНИЕ ЗАДАЧ ПРИ УДАЛЕНИИ ВЫБРАННОГО ПРОЕКТА                                     ОК
3.8 РЕКОМЕНДАЦИИ                                                                                                        ОК
    3.8.1 КЛАССЫ ПРЕДМЕТНОЙ ОБЛАСТИ ХРАНИТЬ В ПАКЕТЕ "entity"                                                           ОК
    3.8.2 ИСПОЛЬЗОВАТЬ ДЛЯ СОЕДИНЕНИЯ СУЩНОСТЕЙ СТРОЧНЫЕ ЗНАЧЕНИЯ С ГЕНЕРАЦИЕЙ ПО СТРАТЕГИИ UUID                        ОК

ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-04                                                                                              ОК

4.1 СОЗДАТЬ СЛОЙ РЕПОЗИТОРИЕВ В ПАКЕТЕ "repository"                                                                     ОК
    4.1.1 КЛАССЫ РЕПОЗИТОРИЕВ ДОЛЖНЫ ОТВЕЧАТЬ ЗА ОПЕРАЦИИ ЧТЕНИЯ И ЗАПИСИ ДАННЫХ В ПРИЛОЖЕНИИ                           ОК
    4.1.2 ДОСТУП К КЛАССАМ РЕПОЗИТОРИЕВ МОЖЕТ БЫТЬ ТОЛЬКО ЧЕРЕЗ СООТВЕТСТВУЮЩИЕ СЕРВИСЫ                                 ОК
    4.1.3 РЕПОЗИТОРИИ ДОЛЖНЫ БЫТЬ РАЗРАБОТАНЫ С ИСПОЛЬЗОВАНИЕМ СТРУКТУРЫ MAP                                            ОК
    4.1.4 РЕПОЗИТОРИИ ДОЛЖНЫ СОДЕРЖАТЬ СЛЕДУЮЩИЕ МЕТОДЫ "findAll", "findOne", "persist", "merge", "remove", "removeAll" ОК
4.2 СОЗДАТЬ СЛОЙ СЕРВИСОВ В ПАКЕТЕ "service"                                                                            ОК
    4.2.1 СЕРВИСЫ ДОЛЖНЫ ДЕЛЕГИРОВАТЬ ВЫЗОВЫ МЕТОДОВ ИЗ РЕПОЗИТОРИЕВ                                                    ОК
    4.2.2 СЕРВИСЫ ДОЛЖНЫ ПРОВОДИТЬ ПЕРВИЧНУЮ ПРОВЕРКУ ДАННЫХ НА ПУСТЫЕ ЗНАЧЕНИЯ СТРОК И NULL                            ОК
    4.2.3 СЛОЙ СЕРВИСОВ ДОЛЖЕН СОДЕРЖАТЬ БИЗНЕС ЛОГИКУ ПРИЛОЖЕНИЯ                                                       ОК
4.3 СОЗДАТЬ ЗАГРУЗЧИК ПРИЛОЖЕНИЯ НА БАЗЕ ОТДЕЛЬНОГО КЛАССА                                                              ОК
    4.3.1 КЛАСС ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ ДОЛЖЕН НАЗЫВАТЬСЯ "Bootstrap"                                                     ОК
    4.3.2 ЗАГРУЗЧИК ПРИЛОЖЕНИЯ ДОЛЖЕН ПРОИЗВОДИТЬ СОЗДАНИЕ ЭКЗЕМПЛЯРОВ РЕПОЗИТОРИЕВ И СЕРВИСОВ                          ОК
    4.3.3 ЗАГРУЗЧИК ПРИЛОЖЕНИЯ ДОЛЖЕН ОТВЕЧАТЬ ЗА ОБРАБОТКУ ТЕРМИНАЛЬНЫХ КОМАНД                                         ОК
4.4 РЕКОМЕНДАЦИИ                                                                                                        ОК
    4.4.1 РЕПОЗИТОРИИ И СЕРВИСЫ НЕ ДОЛЖНЫ СОДЕРЖАТЬ ИНСТРУКЦИИ РАБОТЫ С КОНСОЛЬЮ НА ВВОД / ВЫВОД                        ОК
    4.4.2 КАЖДАЯ СУЩНОСТЬ ПРИЛОЖЕНИЯ ДОЛЖНА ИМЕТЬ ПО ОДНОМУ РЕПОЗИТОРИЮ И СЕРВИСУ                                       ОК
    4.4.3 ЭКЗЕМПЛЯР РЕПОЗИТОРИЯ ДОЛЖЕН ПЕРЕДАВАТЬСЯ В КОНСТРУКТОР КЛАССА СЕРВИСА                                        ОК
    4.4.4 КЛАСС ТОЧКИ ВХОДА ПРИЛОЖЕНИЯ ДОЛЖЕН НАЗЫВАТЬСЯ "Application" И ВЫЗЫВАТЬ МЕТОД "init" ИЗ "Bootstrap"           ОК

5 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-05                                                                                            ОК

5.1 СОЗДАТЬ СЛОЙ КОМАНД                                                                                                 ОК
    5.1.1 СОЗДАТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ КАЖДОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ                                                       ОК
    5.1.2 КЛАСС КОМАНДЫ ДОЛЖЕН ИМЕТЬ СУФФИКС "Command"                                                                  ОК
    5.1.3 КЛАСС КОМАНДЫ ДЛЯ CRUD-ОПЕРАЦИИ ДОЛЖЕН НАЧИНАТЬСЯ С НАЗВАНИЯ СУЩНОСТИ                                         ОК
    5.1.4 КЛАСС КОМАНДЫ ДЛЯ CRUD-ОПЕРАЦИИ ДОЛЖЕН В НАЗВАНИИ СОДЕРЖАТЬ ИМЯ ОПЕРАЦИИ                                      ОК
    5.1.5 КЛАСС КОМАНДЫ ДОЛЖЕН БЫТЬ УНАСЛЕДОВАН ОТ КЛАССА АБСТРАКТНОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ                              ОК
    5.1.6 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "getName" ДЛЯ ВЫДАЧИ НАЗВАНИЯ КОМАНДЫ                            ОК
    5.1.7 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "getDescription" ДЛЯ ВЫДАЧИ ОПИСАНИЯ КОМАНДЫ                     ОК
    5.1.8 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "execute" ДЛЯ БЛОКА ИСПОЛНЯЕМЫХ ИНСТРУКЦИЙ                       ОК
5.2 РЕАЛИЗОВАТЬ РЕГИСТРАЦИЮ ТЕРМИНАЛЬНЫХ КОМАНД В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                                                 ОК
    5.2.1 ОРГАНИЗОВАТЬ ХРАНЕНИЕ ЭКЗЕМПЛЯРОВ КОМНАД НА БАЗЕ СТРУКТУРЫ MAP В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                        ОК
    5.2.2 ДЛЯ КЛЮЧА КОМАНДЫ В "MAP" ИСПОЛЬЗОВАТЬ НАЗВАНИЕ ТЕРМИНАЛЬНОЙ КОМАНДЫ                                          ОК
    5.2.3 ДЛЯ РЕГИСТРАЦИИ ЭКЗЕМПЛЯРОВ КОМАНД ИСПОЛЬЗОВАТЬ МЕТОД "init"                                                  ОК
    5.2.4 ПЕРЕЙТИ НА ИСПОЛЬЗОВАНИЕ СТРУКТУРЫ "MAP" ВМЕСТО SWITCH-БЛОКА                                                  ОК
5.3 РЕКОМЕНДАЦИИ                                                                                                        ОК
    5.3.1 КЛАССЫ ТЕРМИНАЛЬНЫХ КОМАНД МОГУТ ОБРАЩАТЬСЯ ТОЛЬКО К СЕРВИСНОМУ УРОВНЮ                                        ОК
    5.3.2 КЛАССЫ ТЕРМИНАЛЬНЫХ КОМАНД НЕ МОГУТ ОСУЩЕСТВЛЯТЬ ВЫЗОВЫ РЕПОЗИТОРИЕВ                                          ОК
    5.3.3 КЛАССЫ КОМАНД ДОЛЖНЫ СОДЕРЖАТЬ ЛОГИКУ РАБОТЫ С ВВОДОМ / ВЫВОДОМ КОНСОЛИ ПРИЛОЖЕНИЯ                            ОК
    5.3.4 ПЕРЕДАВАТЬ ЗАГРУЗЧИК ПРИЛОЖЕНИЯ В КОНСТРУКТОР АБСТРАКТНОЙ КОМАНДЫ ДЛЯ ДОСТУПА К СЕРВИСАМ                      ОК

6 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-06                                                                                            ОК

6.1 ДОБАВИТЬ ПЕРЕЧИСЛЕНИЕ "ТИП РОЛИ"                                                                                    ОК
    6.1.1 РЕАЛИЗОВАТЬ ОТОБРАЖЕНИЕ ТИПА РОЛИ В ВИДЕ ЛОГИЧЕСКОГО НАЗВАНИЯ "displayName"                                   ОК
    6.1.2 ПРИЛОЖЕНИЕ ДОЛЖНО ПОДДЕРЖИВАТЬ ДВА ТИПА РОЛИ "АДМИНИСТРАТОР" И "ОБЫЧНЫЙ ПОЛЬЗОВАТЕЛЬ"                         ОК
6.2 ДОБАВИТЬ СУЩНОСТЬ "ПОЛЬЗОВАТЕЛЬ"
    6.2.1 ПОЛЬЗОВАТЕЛЬ ДОЛЖЕН ИМЕТЬ ПОЛЕ ЛОГИН И ХЕШ ПАРОЛЯ ДЛЯ РЕАЛИЗАЦИИ АВТОРИЗАЦИИ                                  ОК
    6.2.2 ПОЛЬЗОВАТЕЛЬ ДОЛЖЕН ИМЕТЬ ПОЛЕ С ТИПОМ РОЛИ                                                                   ОК
    6.2.3 СОЗДАТЬ РЕПОЗИТОРИЙ И СЕРВИС ДЛЯ СУЩНОСТИ "ПОЛЬЗОВАТЕЛЬ"                                                      ОК
    6.2.4 РЕАЛИЗОВАТЬ КОМАНДУ АВТОРИЗАЦИИ ПОЛЬЗОВАТЕЛЯ                                                                  ОК
    6.2.5 РЕАЛИЗОВАТЬ КОМАНДУ ЗАВЕРШЕНИЯ СЕАНСА ПОЛЬЗОВАТЕЛЯ                                                            ОК
    6.2.6 РЕАЛИЗОВАТЬ КОМАНДУ РЕГИСТРАЦИИ ПОЛЬЗОВАТЕЛЯ                                                                  ОК
    6.2.7 РЕАЛИЗОВАТЬ КОМАНДУ ОБНОВЛЕНИЯ ПАРОЛЯ ПОЛЬЗОВАТЕЛЯ                                                            ОК
    6.2.8 РЕАЛИЗОВАТЬ КОМАНДЫ ПРОСМОТРА И РЕДАКТИРОВАНИЯ ТЕКУЩЕГО ПРОФИЛЯ ПОЛЬЗОВАТЕЛЯ                                  ОК
    6.2.9 РЕАЛИЗОВАТЬ СОЗДАНИЕ ДВУХ ПРЕДОПРЕДЕЛЕННЫХ УЧЕТНЫХ ЗАПИСЕЙ ПОЛЬЗОВАТЕЛЕЙ С РАЗНЫМИ РОЛЯМИ                     ОК
    6.2.10 РЕАЛИЗОВАТЬ ПРИВЯЗКУ ПРОЕКТОВ И ЗАДАЧ К УЧЕТНОЙ ЗАПИСИ ПОЛЬЗОВАТЕЛЯ ЧЕРЕЗ ПОЛЕ "userId"                      ОК
    6.2.11 РАЗДЕЛИТЬ КОМАНДЫ НА БЕЗОПАСНЫЕ И ТРЕБУЮЩИЕ АВТОРИЗАЦИИ                                                      ОК
    6.2.12 ВСЕ CRUD-ОПЕРАЦИИ ДОЛЖНЫ ВЫПОЛНЯТСЯ ТОЛЬКО ПОСЛЕ АВТОРИЗАЦИИ ПОЛЬЗОВАТЕЛЯ В ПРИЛОЖЕНИИ                       ОК
6.3 РЕКОМЕНДАЦИИ                                                                                                        ОК
    6.3.1 ДОБАВИТЬ ВЫЗОВ СОЗДАНИЯ ПОЛЬЗОВАТЕЛЕЙ В МЕТОД ИНИЦИАЛИЗАЦИИ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                             ОК
    6.3.2 ДЛЯ ХЕШИРОВАНИЯ ПАРОЛЯ НЕОБХОДИМО ИСПОЛЬЗОВАТЬ MD5-АЛГОРИТМ                                                   ОК
    6.3.3 РЕАЛИЗОВАТЬ ХРАНЕНИЕ ТЕКУЩЕГО ПОЛЬЗОВАТЕЛЯ В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                                            ОК
    6.3.4 ПРОВЕРИТЬ ИЗОЛЯЦИЮ ДАННЫХ ПО ПРОЕКТАМ И ЗАДАЧАМ МЕЖДУ РАЗНЫМИ УЧЕТНЫМИ ЗАПИСЯМИ                               OK

ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-07                                                                                              OK

7.1 РАЗРАБОТАТЬ ИНТЕРФЕЙСЫ ДЛЯ РЕПОЗИТОРИЕВ                                                                             OK
    7.1.1 ВЫНЕСТИ ВСЕ CRUD-ОПЕРАЦИИ РЕПОЗИТОРИЕВ В ИНТЕРФЕСЫ                                                            OK
7.2 РАЗРАБОТАТЬ ИНТЕРФЕЙСЫ ДЛЯ СЕРВИСОВ                                                                                 OK
    7.2.1 ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙСЫ РЕПОЗИТОРИЕВ В РЕАЛИЗАЦИИ СЕРВИСОВ                                                    OK
7.3 РАЗРАБОТАТЬ ИНТЕРФЕЙС ДЛЯ ЗАГРУЗЧИКА                                                                                OK
    7.3.1 СОЗДАТЬ ИНТЕРФЕЙС "ServiceLocator" ДЛЯ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                                                  OK
    7.3.2 ДОБАВИТЬ ДЕКЛАРАЦИЮ GET-МЕТОДОВ ДЛЯ ПОЛУЧЕНИЯ СЕРВИСОВ В ИНТЕРФЕЙС СЕРВИС ЛОКАТОРА                            OK
    7.3.3 РЕАЛИЗОВАТЬ ДОСТУП К СЕРВИСАМ ИЗ КОМАНД ТОЛЬКО ЧЕРЕЗ ИНТЕРФЕЙС СЕРВИС ЛОКАТОРА                                OK
7.4 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     OK
    7.4.1 ПРИМЕНИТЬ К КЛАССАМ, ПЕРЕМЕННЫМ И АРГУМЕНТАМ КЛЮЧЕВОЕ СЛОВО "final"                                           OK
    7.4.2 ВЫНЕСТИ ОБЩУЮ ЛОГИКУ СЕРВИСОВ И РЕПОЗИТОРИЕВ В АБСТРАКТНЫЕ КЛАССЫ                                             OK
    7.4.3 ПРИМЕНИТЬ ОБОБЩЕНИЯ ДЛЯ СЕРВИСОВ И РЕПОЗИТОРИЕВ С ЧАСТИ ИНТЕРФЕЙСОВ И РЕАЛИЗАЦИЙ                              OK
7.5 ДОБАВИТЬ ИНФОРМАЦИЮ О РАЗРАБОТЧИКЕ И ВЕРСИИ ПРИЛОЖЕНИЯ В МАНИФЕСТ                                                   OK
    7.5.1 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ ПОДСЧЕТА НОМЕРА ТЕКУЩЕЙ СБОРКИ И ПЕРЕДАТЬ НОМЕР В МАНИФЕСТ                        OK
    7.5.2 ПОДКЛЮЧИТЬ MAVEN-ЗАВИСИМОСТЬ ДЛЯ ЧТЕНИЯ ИНФОРМАЦИИ ИЗ ФАЙЛА "MANIFEST.MF"                                     OK
    7.5.3 РЕАЛИЗОВАТЬ ТЕРМИНАЛЬНУЮ КОМАНДУ "about" ДЛЯ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ О СБОРКЕ ПРИЛОЖЕНИЯ                       OK
7.6 РЕКОМЕНДАЦИИ                                                                                                        OK
    7.6.1 ПРИ ДЕКЛАРАЦИИ ПЕРЕМЕННЫХ И КОНСТАНТ ВСЕГДА ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙСЫ ПРИ ИХ НАЛИЧИИ                            OK

8 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-08                                                                                            OK

8.1 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     OK
    8.1.1 ДОБАВИТЬ АННОТАЦИИ "@NotNull" И "@Nullable" ИЗ ПАКЕТА "JetBrains" ДЛЯ ВСЕХ ПАРАМЕТРОВ И ПЕРЕМЕННЫХ            OK
    8.1.2 ДОБАВИТЬ LOMBOK АННОТАЦИИ ДЛЯ ГЕНЕРАЦИИ КОНСТРУКТОРОВ И GET / SET МЕТОДОВ                                     OK
8.2 НАСТРОИТЬ СБОРКУ РЕЛИЗА ПРИЛОЖЕНИЯ                                                                                  OK
    8.2.1 ПРИЛОЖЕНИЕ ДОЛЖНО ЗАПУСКАТЬСЯ ИЗ КОНСОЛИ ВМЕСТЕ С ИСПОЛЬЗУЕМЫМИ ЗАВИСИМОСТЯМИ БЕЗ ОШИБОК                      OK
    8.2.2 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ КОПИРОВАНИЯ ВСЕХ ЗАВИСИМОСТЕЙ В СБОРОЧНУЮ ДИРЕКТОРИЮ "release/lib"                OK
    8.2.3 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ КОПИРОВАНИЯ СБОРКИ ПРИЛОЖЕНИЯ ДИРЕКТОРИЮ "release/bin"                            OK
8.3 ДОРАБОТАТЬ ТЕРМИНАЛЬНЫЕ КОМАНДЫ                                                                                     OK
    8.3.1 РЕАЛИЗОВАТЬ РЕГИСТРАЦИЮ КОМАНД С ИСПОЛЬЗОВАНИЕМ ПЕРЕЧИСЛЕНИЯ КЛАССОВ В МАССИВЕ                                OK
    8.3.2 РАЗМЕСТИТЬ МАССИВ С КЛАССАМИ ТЕРМИНАЛЬНЫХ КОМАНД В ТОЧКЕ ВХОДА В КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ                        OK
    8.3.3 ПЕРЕДАВАТЬ МАССИВ С КЛАССАМИ ТЕРМИНАЛЬНЫХ КОМАНД В МЕТОД ИНИЦИАЛИЗАЦИИ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                  OK
    8.3.4 РАЗРАБОТАТЬ МЕТОД РЕГИСТРАЦИИ ТЕРМИНАЛЬНОЙ КОМАНДЫ В ЗАГРУЗЧИКИ ПРИЛОЖЕНИЯ ДЛЯ РАЗМЕЩЕНИЯ В СТРУКТУРЕ MAP     OK
    8.3.5 РЕАЛИЗОВАТЬ ПРОВЕРКУ РОДИТЕЛЬСКОГО КЛАССА ТЕРМИНАЛЬНОЙ КОМАНДЫ ПРИ РЕГИСТРАЦИИ В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ        OK
8.4 РЕКОМЕНДАЦИИ                                                                                                        OK
    8.4.1 РЕАЛИЗОВАТЬ СОЗДАНИЕ ТЕРМИНАЛЬНЫХ КОМАНД ПРИ РЕГИСТРАЦИИ ЧЕРЕЗ ВЫЗОВ МЕТОДА "newInstance" ИЗ КЛАССА КОМАНДЫ   OK
    8.4.2 РЕАЛИЗОВАТЬ ПЕРЕДАЧУ ССЫЛКИ НА СЕРВИС ЛОКАТОР В ТЕРМИНАЛЬНУЮ КОМАНДУ ЧЕРЕЗ ВЫЗОВ SET-МЕТОДА                   OK
    8.4.3 РЕАЛИЗОВАТЬ ТЕРМИНАЛЬНЫЙ СЕРВИС ДЛЯ ЗАХВАТА КОМАНД С КОНСОЛИ                                                  OK

9 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-09                                                                                            OK

9.1 РЕАЛИЗОВАТЬ СТАТУС ЗАДАЧ И ПРОЕКТОВ                                                                                 OK
    9.1.1 РАЗРАБОТАТЬ ПЕРЕЧИСЛЕНИЕ СТАТУСОВ ГОТОВНОСТИ СО ЗНАЧЕНИЯМИ (ЗАПЛАНИРОВАНО, В ПРОЦЕССЕ И ГОТОВО)               OK
    9.1.2 РЕАЛИЗОВАТЬ ПОЛЕ "displayName" ДЛЯ ПЕРЕЧИСЛЕНИЯ СТАТУСОВ ГОТОВНОСТИ                                           OK
    9.1.3 ИСПОЛЬЗОВАТЬ СТАТУС "ЗАПЛАНИРОВАНО" ДЛЯ НАЧАЛЬНОГО ЗНАЧЕНИЯ В СУЩНОСТЯХ ЗАДАЧИ И ПРОЕКТА                      OK
9.2 РЕАЛИЗОВАТЬ СОРТИРОВКУ ПРОЕКТОВ И ЗАДАЧ                                                                             OK
    9.2.1 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ В ПОРЯДКЕ ИХ СОЗДАНИЯ В СИСТЕМЕ                             OK
    9.2.2 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО ДАТЕ НАЧАЛА                              OK
    9.2.3 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО ДАТЕ ОКОНЧАНИЯ                           OK
    9.2.4 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО СТАТУСУ ГОТОВНОСТИ                       OK
9.3 РЕАЛИЗОВАТЬ ПОИСК ПРОЕКТОВ И ЗАДАЧ ПО ЧАСТИ НАЗВАНИЯ ИЛИ ОПИСАНИЯ                                                   OK
9.4 РЕАЛИЗОВАТЬ ОБРАБОТКУ ИСКЛЮЧЕНИЙ                                                                                    OK
    9.4.1 ДОБАВИТЬ ВЫБРОС ИСКЛЮЧЕНИЙ ИЗ МЕТОДА ВЫПОЛНЕНИЯ АБСТРАКТНОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ                              OK
    9.4.2 РЕАЛИЗОВАТЬ ЕДИНЫЙ БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ В ГЛАВНОЙ ПЕТЛЕ ПРИЛОЖЕНИЯ                                       OK
9.5 РЕКОМЕНДАЦИИ                                                                                                        OK
    9.5.1 РЕАЛИЗОВАТЬ ОБРАБОТКУ ИСКЛЮЧЕНИЙ БЕЗ ПРЕРЫВАНИЯ ВЫПОЛНЕНИЯ ОСНОВНОГО ПОТОКА                                   OK

10 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-10                                                                                           OK

10.1 РЕАЛИЗОВАТЬ СОХРАНЕНИЕ ДАННЫХ                                                                                      OK
    10.1.1 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ СЕРИАЛИЗАЦИИ                              OK
    10.1.2 РЕА-ТЬ КОМАНДУ СОХ-Я ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И ТЕХ-ИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ XML       OK
    10.1.3 РЕА-ТЬ КОМАНДУ СОХ-Я ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И ТЕХ-ИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ JSON      OK
    10.1.4 РЕА-ТЬ КОМАНДУ СОХ-Я ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И БИБ-КИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ XML   OK
    10.1.5 РЕА-ТЬ КОМАНДУ СОХ-Я ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И БИБ-КИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ JSON  OK
10.2 РЕАЛИЗОВАТЬ ЗАГРУЗКУ ДАННЫХ                                                                                        OK
    10.2.1 РЕА-ТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛ. С ИСП. СЕРИАЛИЗАЦИИ                                                  OK
    10.2.2 РЕА-ТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И ТЕХ-ИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ XML    OK
    10.2.3 РЕА-ТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И ТЕХ-ИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ JSON   OK
    10.2.4 РЕА-ТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И БИБ-КИ FASTERXML В ТРАНС-НОМ ФОРМАТЕ XML   OK
    10.2.5 РЕА-ТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛ. С ИСП. ЭКСТЕРНАЛТИЗАЦИИ И БИБ-КИ FASTERXML В ТРАНС-НОМ ФОРМАТЕ JSON  OK
10.3 РЕКОМЕНДАЦИИ                                                                                                       OK
    10.3.1 ПРИ ИСПОЛЬЗОВАНИИ ТРАНСПОРТНЫХ ФОРМАТОВ ДАННЫХ ПРИМЕНЯТЬ PRETTY ФОРМАТИРОВАНИЕ ДАННЫХ                        OK
    10.3.2 ПРИ ИСП. ВНЕШНИХ ЭКСТЕРНАЛТИЗАТОРОВ ПРИМЕНЯТЬ РЕЖИМ ИГНОР-Я НЕИЗВ-Х АТРИБУТОВ БЕЗ ЖЕСТКОЙ ВАЛИДАЦИИ ДОК-ТА   OK

11 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-11                                                                                           OK

11.1 СОЗДАТЬ АГРЕГАТОР МОДУЛЕЙ ПРИЛОЖЕНИЯ                                                                               OK
    11.1.1 НАСТРОИТЬ СВЯЗИ МЕЖДУ АГРЕГАТОРОМ И ДОЧЕРНИМИ МОДУЛЯМИ                                                       OK
    11.1.2 ВЫНЕСТИ ОБЩИЕ НАСТРОЙКИ СБОРКИ ПРОЕКТОВ В МОДУЛЬ АГРЕГАТОРА                                                  OK
11.2 СОЗДАТЬ МОДУЛЬ СЕРВЕРНОГО ПРИЛОЖЕНИЯ                                                                               OK
    11.2.1 РЕАЛИЗОВАТЬ ЗАГРУЗЧИК И СЕРВИС ЛОКАТОР ДЛЯ СЕРВЕРНОГО ПРИЛОЖЕНИЯ                                             OK
    11.2.2 РЕАЛИЗОВАТЬ ДЛЯ КАЖДОЙ СУЩНОСТИ ОТДЕЛЬНУЮ ТОЧКУ ДОСТУПА                                                      OK
    11.2.3 ДЛЯ РЕАЛИЗАЦИИ ТОЧЕК ДОСТУПА ИСПОЛЬЗОВАТЬ ТЕХНОЛОГИЮ JAX-WS                                                  OK
    11.2.4 РЕАЛИЗОВАТЬ ДЕЛЕГИРОВАНИЕ ВЫЗОВОВ МЕТОДОВ ИЗ СЕРВИСОВ ЧЕРЕЗ СООТВЕТСТВУЮЩИЕ ТОЧКИ ДОСТУПА                    OK
11.3 СОЗДАТЬ МОДУЛЬ КЛИЕНТСКОГО ПРИЛОЖЕНИЯ                                                                              OK
    11.3.1 РЕАЛИЗОВАТЬ ЗАГРУЗЧИК И СЕРВИС ЛОКАТОР ДЛЯ КЛИЕНТСКОГО ПРИЛОЖЕНИЯ                                            OK
    11.3.2 ПЕРЕНЕСТИ ТЕРМИНАЛЬНЫЕ КОМАНДЫ В КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ                                                       OK
    11.3.3 РЕАЛИЗОВАТЬ В КОНСОЛЬНЫХ КОМАНДАХ ВЫЗОВ ВЕБ СЕРВИСОВ ВМЕСТО СЕРВИСОВ                                         OK
    11.3.4 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ENUNCIATE ДЛЯ АВТОМАТИЧЕСКОЙ ГЕНЕРАЦИИ ДОКУМЕНТАЦИИ ПО WSDL                          OK
11.4 РЕАЛИЗОВАТЬ СЕТЕВУЮ АВТОРИЗАЦИЮ                                                                                    OK
    11.4.1 РЕАЛИЗОВАТЬ ХРАНЕНИЕ СЕССИИ В ВИДЕ СУЩНОСТИ                                                                  OK
    11.4.2 РЕАЛИЗОВАТЬ ПОДПИСЬ СЕССИИ НА СЕРВЕРЕ                                                                        OK
    11.4.3 РЕАЛИЗОВАТЬ ПРОВЕРКУ СЕССИИ И РОЛЕЙ НЕ СЕРВЕРЕ                                                               OK
11.5 РЕКОМЕНДАЦИИ                                                                                                       OK
    11.5.1 НЕОБХОДИМО ИСПОЛЬЗОВАТЬ УНИКАЛЬНЫЕ НАЗВАНИЯ МЕТОДОВ В ТОЧКАХ ДОСТУПА В РАМКАХ ПРИЛОЖЕНИЯ                     OK
    11.5.2 КОМАНДЫ СОХРАНЕНИЯ И ЗАГРУЗКИ ДАННЫХ ДОЛЖНЫ ВЫПОЛНЯТЬСЯ ОТ РОЛИ АДМИНИСТРАТОРА                               OK
    11.5.3 РЕАЛИЗОВАТЬ ПЕРЕДАЧУ ОБЪЕКТА СЕССИИ В ВЕБ-МЕТОДЕ ПЕРВЫМ ПАРАМЕТРОМ                                           OK

12 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-12                                                                                           OK

12.1 РЕАЛИЗОВАТЬ ХРАНЕНИЕ ДАННЫХ В СУБД                                                                                 OK
    12.1.1 ПОДКЛЮЧИТЬ JDBC-КОННЕКТОР В КАЧЕСТВЕ ЗАВИСИМОСТИ В MAVEN-ПРОЕКТЕ                                             OK
    12.1.2 СОЗДАТЬ В СУБД ОТДЕЛЬНУЮ БД ДЛЯ ПРИЛОЖЕНИЯ                                                                   OK
    12.1.3 СОЗДАТЬ ТАБЛИЦЫ ДЛЯ ХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ (ПОЛЬЗОВАТЕЛЬ, ЗАДАЧА, ПРОЕКТ И СЕССИЯ)                      OK
    12.1.4 ПРОИЗВЕСТИ РЕФАКТОРИНГ РЕПОЗИТОРИЯ ДЛЯ ПЕРЕКЛЮЧЕНИЯ НА РАБОТУ С СУБД                                         OK
    12.1.5 РЕАЛИЗОВАТЬ ХРАНЕНИЕ ТЕКУЩЕГО СОЕДИНЕНИЕ С СУБД В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                                      OK
    12.1.6 РЕАЛИЗОВАТЬ УПРАВЛЕНИЕ ПРЕДМЕТНОЙ ОБЛАСТЬЮ С ИСПОЛЬЗОВАНИЕМ SQL-КОНСТРУКЦИЙ                                  OK
    12.1.7 РЕАЛИЗОВАТЬ УТИЛИТНЫЙ КЛАСС ДЛЯ УСТАНОВЛЕНИЯ СОЕДИНЕНИЯ С СУБД                                               OK
12.2 РЕКОМЕНДАЦИИ                                                                                                       OK
    12.2.1 ПРИ СОЗДАНИИ ТАБЛИЦ УБЕДИТЬСЯ В ИСПОЛЬЗОВАНИИ ТРАНЗАКЦИОННОГО ДВИЖКА СУБД (INNODB)                           OK
    12.2.2 ПРИ СОЗДАНИИ ТАБЛИЦ УСТАНОВИТЬ НЕОБХОДИМЫЕ КЛЮЧИ ДЛЯ ОБЕСПЕЧЕНИЯ ЦЕЛОСТНОСТИ ДАННЫХ                          OK
    12.2.3 ОРГАНИЗОВАТЬ ХРАНЕНИЕ НАСТРОЕК ПОДКЛЮЧЕНИЯ К СУБД В PROPERTY-ФАЙЛЕ                                           OK
    12.2.4 ИСПОЛЬЗОВАТЬ СУБД MYSQL ВЕРСИИ 5.5                                                                           OK
    12.2.5 ИСПОЛЬЗОВАТЬ ГРАФИЧЕСКИЙ КЛИЕНТ HEIDYSQL                                                                     OK
    12.2.6 ИСПОЛЬЗОВАТЬ КОННЕКТОР MYSQL 5.1.4                                                                           OK
    12.2.7 ИСПОЛЬЗОВАТЬ КОДИРОВКУ UTF8_GENERAL_CI                                                                       OK
    12.2.8 ПЕРЕЧИСЛЕНИЯ ХРАНИТЬ В СУБД В ВИДЕ СТРОКИ                                                                    OK
    12.2.9 КЛАСС DATE ХРАНИТЬ В СУБД В ВИДЕ DATETIME                                                                    OK
    12.2.10 ИСПОЛЬЗОВАТЬ ЗНАЧЕНИЕ UUID В КАЧЕСТВЕ КЛЮЧА                                                                 OK
    12.2.11 ВСЕ СУЩНОСТИ И ТАБЛИЦЫ ДОЛЖНЫ СОЕДИНЯТЬСЯ ПО ПОЛЮ "ID"                                                      OK
    12.2.12 РЕАЛИЗОВАТЬ ХРАНЕНИЕ BOOLEAN НА БАЗЕ BIT(1) ИЛИ TINYINT(1)                                                  OK

13 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-13                                                                                           OK

13.1 ВНЕДРИТЬ ТЕХНОЛОГИЮ MYBATIS                                                                                        OK
    13.1.1 ПОДКЛЮЧИТЬ ПОСЛЕДНЮЮ ВЕРСИЮ MYBATIS В КАЧЕСТВЕ ЗАВИСИМОСТИ                                                   OK
    13.1.2 ИСПОЛЬЗОВАТЬ JAVA BASED КОНФИГУРАЦИЮ ДЛЯ СЕССИИ MYBATIS                                                      OK
    13.1.3 РЕАЛИЗОВАТЬ РЕПОЗИТОРИИ НА БАЗЕ МАППЕРОВ MYBATIS                                                             OK
    13.1.4 ПЕРЕНЕСТИ ВСЕ SQL-КОНСТРУКЦИИ В АННОТАЦИИ MYBATIS                                                            OK
13.2 РЕКОМЕНДАЦИИ                                                                                                       OK
    13.2.1 ВЫПОЛНЯТЬ COMMIT СЕССИИ MYBATIS ДЛЯ ВСЕХ ОПЕРАЦИЙ НА ЗАПИСЬ ДЛЯ ФИКСАЦИИ ИЗМЕНЕНИЙ                           OK
    13.2.2 РЕАЛИЗОВАТЬ РУЧНОЕ УПРАВЛЕНИЕ ТРАНЗАКЦИЕЙ НА УРОВНЕ СЕРВИСОВ                                                 OK
    13.2.3 ВЫПОЛНЯТЬ ROLLBACK ТРАНЗАКЦИИ ПРИ ВЫПАДЕНИИ ИСКЛЮЧЕНИЯ В БЛОКЕ TRY                                           OK
    13.2.4 ПРИ НЕСОВПАДЕНИИ НАЗВАНИЙ ПОЛЕЙ В СУЩНОСТЯХ И ТАБЛИЦАХ ИСПОЛЬЗОВАТЬ АННОТАЦИЮ RESULT                         OK
    13.2.5 РЕПОЗИТОРИИ - МАППЕРЫ ДОЛЖНЫ БЫТЬ РЕАЛИЗОВАНЫ В ВИДЕ ИНТЕРФЕЙСОВ                                             OK

14 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-14                                                                                           OK

14.1 ВНЕДРИТЬ В ПРИЛОЖЕНИЕ HIBERNATE                                                                                    OK
    14.1.1 ТЕКУЩИЕ СУЩНОСТИ ПЕРЕВЕСТИ В ОБЪЕКТЫ DTO ДЛЯ СОХРАНЕНИЯ ТРАНСПОРТА ДАННЫХ ПО SOAP                            OK
    14.1.2 СОЗДАТЬ ГРАФЫ СУЩНОСТЕЙ С ИСПОЛЬЗОВАНИЕМ JPA                                                                 OK
    14.1.3 СОЗДАТЬ JAVA BASED КОНФИГУРАЦИЮ СЕССИИ HIBERNATE                                                             OK
    14.1.4 РЕАЛИЗОВАТЬ КАСКАДНОЕ УДАЛЕНИЕ ГРАФА СУЩНОСТИ "ПРОЕКТ"                                                       OK
    14.1.5 РЕАЛИЗОВАТЬ УПРАВЛЕНИЕ ТРАНЗАКЦИЕЙ HIBERNATE НА УРОВНЕ СЕРВИСОВ                                              OK
    14.1.6 РЕАЛИЗОВАТЬ ПРЕОБРАЗОВАНИЕ СУЩНОСТЕЙ В КЛАССЫ DTO НА СЛОЕ ПРЕЗЕНТАЦИИ ДАННЫХ                                 OK
14.2 РЕКОМЕНДАЦИИ                                                                                                       OK
    14.2.1 ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙСЫ JPA ВМЕСТО РЕАЛИЗАЦИИ HIBERNATE                                                      OK
    14.2.2 ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙС "EntityManagerFactory" ВМЕСТО "SessionManagerFactory"                                 OK
    14.2.3 ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙС "EntityManager" ВМЕСТО "Session"                                                      OK
    14.2.4 РЕАЛИЗОВАТЬ ХРАНЕНИЕ ПЕРЕЧИСЛЕНИЙ В ВИДЕ СТРОКИ С ИСПОЛЬЗОВАНИЕМ АННОТАЦИИ "@Enumerated"                     OK
    14.2.5 РЕАЛИЗОВАТЬ ПРОВЕРКУ НА УНИКАЛЬНОСТЬ ЛОГИНА С ИСПОЛЬЗОВАНИЕМ АННОТАЦИИ "@Column"                             OK
    14.2.6 ВЫНЕСТИ ОБЩИЕ ПОЛЯ СУЩНОСТЕЙ В АБСТРАКТНЫЙ КЛАСС СУЩНОСТИ С ИСПОЛЬЗОВАНИЕМ "@MappedSuperclass"               OK
    14.2.7 ИСПОЛЬЗОВАТЬ СРЕДСТВА АВТОМАТИЧЕСКОЙ ГЕНЕРАЦИИ СХЕМЫ СУБД ПО СТРАТЕГИИ ОБНОВЛЕНИЯ                            OK
    14.2.8 ИСПОЛЬЗОВАТЬ ОТОБРАЖЕНИЕ SQL-КОНСТРУКЦИЙ ПРИ ВЫЗОВЕ HIBERNATE НА ЧТЕНИЕ / ЗАПИСЬ                             OK
    14.2.9 СОЗДАВАТЬ РЕПОЗИТОРИЙ И ЭКЗЕМПЛЯР ENTITY MANAGER НА КАЖДЫЙ ВЫЗОВ СЕРВИСА                                     OK

15 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-15                                                                                           OK

15.1 ВНЕДРИТЬ В ПРИЛОЖЕНИЕ SE WELD-CDI                                                                                  OK
    15.1.1 РЕАЛИЗОВАТЬ ВНЕДРЕНИЕ ФАБРИКИ HIBERNATE С ИСПОЛЬЗОВАНИЕМ PRODUCER                                            OK
    15.1.2 РЕАЛИЗОВАТЬ ИНИЦИАЛИЗАЦИЮ СЕРВЕРНОГО ПРИЛОЖЕНИЯ С ИСПОЛЬЗОВАНИЕМ КОНТЕЙНЕРА CDI                              OK
    15.1.3 РЕАЛИЗОВАТЬ ИНИЦИАЛИЗАЦИЮ КЛИЕНТСКОГО ПРИЛОЖЕНИЯ С ИСПОЛЬЗОВАНИЕМ КОНТЕЙНЕРА CDI                             OK
    15.1.4 РЕАЛИЗОВАТЬ ВНЕДРЕНИЕ ЗАВИСИМОСТЕЙ МЕЖДУ КЛАССАМИ ПРИЛОЖЕНИЯ                                                 OK
15.2 РАЗРАБОТАТЬ ИНТЕГРАЦИОННЫЕ ТЕСТЫ                                                                                   OK
    15.2.1 РЕАЛИЗОВАТЬ ИНТЕГРАЦИОННЫЕ ТЕСТЫ ДЛЯ CRUD ОПЕРАЦИЙ В КЛИЕНТСКОМ МОДУЛЕ С ИСПОЛЬЗОВАНИЕМ JUNIT                OK
    15.2.2 ИНТ. ТЕСТЫ ДОЛЖНЫ РАБОТАТЬ ПОД ТЕСТ-Й УЧ. ЗАП-Ю И УД-ТЬ ЗА СОБОЙ ДАННЫЕ ПОСЛЕ ВЫП-Я ТЕСТ-Я ВЫЗ-В ТЧК ДОСТУПА OK
    15.2.3 ИНТ. ТЕСТЫ ДОЛЖНЫ ЗАП-СЯ ПОД ОТД. MAVEN-ПРОФ. ДЛЯ СОХ-НИЯ СТАБ-ТИ СБОРКИ БЕЗ ЗАПУЩЕННОГО СЕРВЕРНОГО ПРИЛ-НИЯ OK
15.3 РЕКОМЕНДАЦИИ                                                                                                       OK
    15.3.1 ОТСУТСТВУЕТ ВОЗМОЖНОСТЬ РЕАЛИЗОВАТЬ ТОЧКИ ДОСТУПА С ОБЛАСТЬЮ ВИДИМОСТИ В РАМКАМ ПРИЛОЖЕНИЯ                   OK
    15.3.2 РЕАЛИЗОВАТЬ КЛАССЫ СЕРВИСОВ И ЗАГРУЗЧИКИ ПРИЛОЖЕНИЯ В ВИДЕ ОДИНОЧЕК С ОБЛАСТЬЮ ВИДИМОСТИ В РАМКАХ ПРИЛОЖЕНИЯ OK
    15.3.3 СОЗДАВАТЬ РЕПОЗИТОРИЙ И ЭКЗЕМПЛЯР ENTITY MANAGER НА КАЖДЫЙ ВЫЗОВ СЕРВИСА                                     OK
    15.3.4 ДОБАВИТЬ ДИСКРИПТОР РАЗВОР-НИЯ ПРИЛОЖЕНИЙ "beans.xml" С ВКЛЮЧЕННЫМ СКАНИРОВАНИЕМ ВСЕХ КЛАССОВ БЕЗ АННОТАЦИЙ  OK
    15.3.5 РЕАЛ-ТЬ СКВОЗНОЕ ВНЕД-ИЕ ЗАВ-ТЕЙ В ТОЧКИ ДОСТУПА МОЖНО ЧЕРЕЗ ИХ ВНЕД-ИЕ В ЗАГ-ИК ПРИЛ-Я ДЛЯ ПОСЛ-ЩЕЙ ПУБ-ЦИИ OK

16 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-16                                                                                           OK

16.1 ВНЕДРИТЬ APACHE DELTA SPIKE                                                                                        OK
    16.1.1 ДОБАВИТЬ ЗАВИСИМОСТИ APACHE DELTA SPIKE С ОФИЦИАЛЬНОГО ВЕБ-САЙТА В MAVEN-ПРОЕКТ                              OK
    16.1.2 РЕАЛИЗОВАТЬ АВТОМАТИЧЕСКОЕ УПРАВЛЕНИЕ ТРАНЗАКЦИЕЙ НА УРОВНЕ СЕРВИСОВ С ИСП-ЕМ АННОТАЦИИ "@Transactional"     OK
    16.1.3 РЕАЛИЗОВАТЬ РЕПОЗИТОРИИ В ВИДЕ ИНТЕРФЕЙСОВ С АННОТАЦИЕЙ "@Repository"                                        OK
    16.1.4 РЕАЛИЗОВАТЬ ВНЕДРЕНИЕ "@EntityManager" С ОБЛАСТЬЮ ВИДИМОСТИ "@TransactionalScope"                            OK
16.2 РАЗРАБОТАТЬ ТЕСТЫ СЛОЕВ ПРИЛОЖЕНИЯ                                                                                 OK
16.3 ПРОГРАММНЫЙ КОД                                                                                                    OK

17 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-17                                                                                           OK

17.1 ВНЕДРИТЬ В ПРОЕКТ HAZELCAST                                                                                        OK
    17.1.1 ДОБАВИТЬ MAVEN-ЗАВИСИМОСТИ ДЛЯ HAZELCAST                                                                     OK
    17.1.2 ДОБАВИТЬ MAVEN-ЗАВИСИМОСТИ ДЛЯ HIBERNATE                                                                     OK
17.2 ВНЕДРИТЬ В ПРОЕКТ JPA SECOND LEVEL CACHE                                                                           OK
    17.2.1 ДОБАВИТЬ АННОТАЦИИ ДЛЯ КЕШИРОВАНИЯ СУЩНОСТЕЙ                                                                 OK
    17.2.2 ПРОТЕСТИРОВАТЬ КЕШ ВТОРОГО УРОВНЯ                                                                            OK
    17.2.3 ПРОТЕСТИРОВАТЬ ОБЪЕДИНЕНИЕ HAZELCAST НОД В КЛАСТЕР ДЛЯ НЕСКОЛЬКИХ ЭКЗЕМПЛЯРОВ ПРИЛОЖЕНИЯ                     OK
17.3 ПРОГРАММНЫЙ КОД                                                                                                    OK

18 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-18                                                                                           OK

18.1 РЕАЛИЗОВАТЬ КОМАНДУ SERVER INFO                                                                                    OK
18.2 НАСТРОИТЬ APACHE НА ПОРТУ 80 В КАЧЕСТВЕ ПРОКСИ БАЛАНСИРОВЩИКА ВЕБ-ЗАПРОСОВ                                         OK
18.3 ОБНОВИТЬ КЛИЕНТ ДЛЯ РАБОТЫ С БАЛАНСИРОВЩИКОМ ВЕБ-ЗАПРОСОВ                                                          OK
18.4 ПРОТЕСТИРОВАТЬ РАБОТУ HAZELCAST JPA SECOND LEVEL CACHE В КЛАСТЕРЕ                                                  OK

19 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-19                                                                                           OK
    19.1 ПЕРЕВЕСТИ ПРИЛОЖЕНИЕ НА SPRING                                                                                 OK
    19.1.1 ЗАМЕНИТЬ ЗАВИСИМОСТИ И АННОТАЦИИ WELD CDI НА SPRING CONTEXT                                                  OK
    19.1.2 ЗАМЕНИТЬ РЕПОЗИТОРИИ APACHE DELTA SPIKE НА SPRING DATA JPA                                                   OK
    19.1.3 ЗАМЕНИТЬ ТЕСТЫ WELD - APACHE DELTA SPIKE НА SPRING TESTING                                                   OK
19.2 РЕКОМЕНДАЦИИ                                                                                                       OK
    19.2.1 УДАЛИТЬ ВСЕ ЗАВИСИМОСТИ WELD И APACHE DELTA SPIKE ИЗ MAVEN-ПРОЕКТА                                           OK
    19.2.2 РЕАЛИЗОВАТЬ SPRING CONFIG С ИСПОЛЬЗОВАНИЕМ JAVA BASED ПОДХОДА И АННОТАЦИЙ                                    OK
19.3 ПРОГРАММНЫЙ КОД                                                                                                    OK