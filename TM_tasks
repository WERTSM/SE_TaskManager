*** *** *** JDK 1.7 НАБОР ПРАКТИЧЕСКИХ ЗАДАНИЙ  *** *** ***
*** *** *** JAVA SE & EE SPRING FRAMEWORK       *** *** ***

1 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-01                                                                                            ОК

1.1 РАЗРАБОТАТЬ КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ                                                                                   ОК
    1.1.1 РЕАЛИЗОВАТЬ ТОЧКУ ВХОДА PSVM                                                                                  ОК
    1.1.2 РЕАЛИЗОВАТЬ ОБРАБОТКУ ТЕРМИНАЛЬНЫХ КОМАНД                                                                     ОК
1.2 РЕАЛИЗОВАТЬ УПРАВЛЕНИЕ ПРОЕКТАМИ                                                                                    ОК
    1.2.1 СОЗДАНИЕ ПРОЕКТА                                                                                              ОК
    1.2.2 ПРОСМОТР ПРОЕКТА / ПРОЕКТОВ                                                                                   ОК
    1.2.3 РЕДАКТИРОВАНИЕ ПРОЕКТА                                                                                        ОК
    1.2.4 УДАЛЕНИЕ ПРОЕКТА                                                                                              ОК
1.3 РЕАЛИЗОВАТЬ ВЫЗОВ СПРАВКИ                                                                                           ОК
    1.3.1 ПРИ НАБОРЕ "HELP" ВЫВОДИТСЯ СПИСОК КОМАНД                                                                     ОК
    1.3.2 СОЗДАНИЕ ЗАДАЧИ                                                                                               ОК
    1.3.3 ПРОСМОТР ЗАДАЧИ / ЗАДАЧ                                                                                       ОК
    1.3.4 РЕДАКТИРОВАНИЕ ЗАДАЧИ                                                                                         ОК
    1.3.5 УДАЛЕНИЕ ЗАДАЧИ                                                                                               ОК
1.4 РЕАЛИЗОВАТЬ СПРАВОЧНУЮ КОМАНДУ                                                                                      ОК Повтор?
    1.4.1 ВЫВОДИТЬ СПИСОК ДОСТУПНЫХ КОМАНД                                                                              ОК
1.5 РЕКОМЕНДАЦИИ                                                                                                        ОК
    1.5.1 ИСПОЛЬЗОВАТЬ ТОЛЬКО ВОЗМОЖНОСТИ JAVA SE                                                                       ОК
    1.5.2 ИСПОЛЬЗОВАТЬ MAVEN-ПРОЕКТ ДЛЯ СБОРКИ                                                                          ОК
    1.5.3 РАСПРЕДЕЛИТЬ КОД ПО НЕСКОЛЬКИМ КЛАССАМ                                                                        ОК
1.5.4 КЛАССЫ ПРИЛОЖЕНИЯ ХРАНИТЬ ВО ВЛОЖЕННОМ ПАКЕТЕ "ru./ВАША ФАМИЛИЯ/.tm"                                              ОК
1.5.5 СОБЛЮДАТЬ ТРЕБОВАНИЯ К ИМЕНОВАНИЮ В JAVA                                                                          ОК

2 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-02                                                                                            ОК

2.1 СОЗДАТЬ GIT-РЕПОЗИТОРИЙ                                                                                             ОК https://github.com/WERTSM/SE_TaskManager
2.2 СОЗДАТЬ APACHE MAVEN ПРОЕКТ                                                                                         ОК
    2.2.1 ДОБАВИТЬ ИНФОРМАЦИЮ О РАЗРАБОТЧИКЕ В СЕКЦИЮ "developers"                                                      ОК
2.3 ДОБАВИТЬ GITIGNORE ДЛЯ НЕНУЖНЫХ ФАЙЛОВ В РЕПОЗИТОРИИ                                                                ОК
    2.3.1 ДОБАВИТЬ В ИГНОР ПАПКИ С БИНАРНЫМИ ФАЙЛАМИ СБОРКИ ПРОЕКТА ("out", "bin", "targer")                            ОК
    2.3.2 ДОБАВИТЬ В ИГНОР ФАЙЛЫ И ПАПКИ ПРОЕКТА IDE (".idea", ".iml")                                                  ОК
    2.3.3 УБЕДИТЬСЯ В ОТСУТСТВИИ НЕНУЖНЫХ ФАЙЛОВ В РЕПОЗИТОРИИ ИСХОДНОГО КОДА                                           ОК
    2.3.4 УБЕДИТЬСЯ В ПРИСУТСТВИИ ВСЕХ КЛАССОВ ПРИЛОЖЕНИЯ В РЕПОЗИТОРИИ                                                 ОК
2.4 ДОБАВИТЬ ПРОЕКТНУЮ ДОКУМЕНТАЦИЮ В ФАЙЛ README.MD                                                                    ОК
    2.4.1 ДОБАВИТЬ ТРЕБОВАНИЯ К SOFTWARE                                                                                ОК
    2.4.2 ДОБАВИТЬ ОПИСАНИЕ СТЕКА ТЕХНОЛОГИЙ                                                                            ОК
    2.4.3 ДОБАВИТЬ ИМЯ РАЗРАБОТЧИКА И КОНТАКТЫ                                                                          ОК
    2.4.4 ДОБАВИТЬ КОМАНДЫ ДЛЯ СБОРКИ ПРИЛОЖЕНИЯ                                                                        ОК
    2.4.5 ДОБАВИТЬ КОМАНДЫ ДЛЯ ЗАПУСКА ПРИЛОЖЕНИЯ                                                                       ОК
2.5 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ЗАПУСКАТЬ ПРИЛОЖЕНИЕ ИЗ КОНСОЛИ                                                             ОК
    2.5.1 ДОБАВИТЬ MAVEN-ПЛАГИН ДЛЯ ГЕНЕРАЦИИ МАНИФЕСТА ПРИЛОЖЕНИЯ С УКАЗАНИЕМ ТОЧКИ ВХОДА                              ОК
    2.5.2 ПРОВЕРИТЬ ЗАПУСК ПРИЛОЖЕНИЯ ИЗ КОНСОЛЬНОГО ОКРУЖЕНИЯ В ОПЕРАЦИОННОЙ СИСТЕМЕ                                   ОК
    2.5.3 РЕАЛИЗОВАТЬ ЛОГИКУ CRUD-ОПЕРАЦИЙ В ОТДЕЛЬНЫХ МЕТОДАХ ДЛЯ УПРАВЛЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТЬЮ                       ОК
    2.5.4 ИСПОЛЬЗОВАТЬ ЭКЗЕМПЛЯРЫ КЛАССОВ ВМЕТО СТАТИЧЕСКИХ МЕТОДОВ ДЛЯ ВЫЗОВА ФУНКЦИОНАЛА                              ОК
    2.5.5 ИСПОЛЬЗОВАТЬ DATE FORMATTER ДЛЯ РАБОТЫ С ДАТОЙ В ФОРМАТЕ DD.MM.YYYY                                           ОК

3 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-03                                                                                            ОК

3.1 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     ОК
    3.1.1 ВЫНЕСТИ ЛОГИКУ ТЕРМИНАЛЬНЫХ КОМАНД В ОТДЕЛЬНЫЕ МЕТОДЫ
    3.1.2 ЗАМЕНИТЬ СТРОЧНЫЕ ЛИТЕРАЛЫ НА КОНСТАНТЫ ДЛЯ ТЕРМИНАЛЬНЫХ КОМАНД                                               ОК
    3.1.3 ЗАМЕНИТЬ УСЛОВНЫЕ БЛОКИ С ОТРИЦАНИЕМ НА SWITCH ДЛЯ ВЫБОРА ТЕРМИНАЛЬНОЙ КОМАНДЫ                                ОК
3.2 РАЗРАБОТАТЬ ПРЕДМЕТНУЮ ОБЛАСТЬ                                                                                      ОК
3.3 ВЫДЕЛИТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ ПРОЕКТА                                                                                ОК
    3.3.1 СОЗДАТЬ ПОЛЯ "ID", "НАЗВАНИЕ", "ОПИСАНИЕ", "ДАТА НАЧАЛА", "ДАТА ОКОНЧАНИЯ"                                    ОК
3.4 ВЫДЕЛИТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ ЗАДАЧИ                                                                                 ОК
    3.4.1 СОЗДАТЬ ПОЛЯ "ID", "НАЗВАНИЕ", "ОПИСАНИЕ", "ДАТА НАЧАЛА", "ДАТА ОКОНЧАНИЯ", "ID ПРОЕКТА"                      ОК
3.5 РЕАЛИЗОВАТЬ ЗАВЕРШЕНИЕ ПРИЛОЖЕНИЯ ПО ТЕРМИНАЛЬНОЙ КОМАНДЕ "EXIT"                                                    ОК
    3.5.1 ПЕРЕЙТИ НА ИСПОЛЬЗОВАНИЕ ТОЛЬКО ОДНОГО БЕСКОНЕЧНОГО ЦИКЛА В ГЛАВНОМ ПОТОКЕ ПРИЛОЖЕНИЯ                         ОК А как? Можно было несколько? Например.
3.6 ДОБАВИТЬ ТЕКСТОВОЕ ОПИСАНИЕ ДЛЯ ТЕРМИНАЛЬНЫХ КОМАНД ПРИ ВЫЗОВЕ СПРАВКИ                                              ??? Не повтор?
    3.6.1 ПРИ ВЫЗОВЕ СПРАВКИ ДОЛЖНО ОТОБРАЖАТЬСЯ ОПИСАНИЕ ДЛЯ КАЖДОЙ ТЕРМИНАЛЬНОЙ КОМАНДЕ                               ??? Не повтор?
3.7 РЕАЛИЗОВАТЬ СВЯЗЬ ЗАДАЧИ С ПРОЕКТОМ                                                                                 ОК
    3.7.1 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ПРИКРЕПЛЕНИЯ ЗАДАЧИ К ВЫБРАННОМУ ПРОЕКТУ                                              ОК Нужна ли проверка? а если я указываю 0 можно так?
    3.7.2 РЕАЛИЗОВАТЬ ПРОСМОТР ВСЕХ ЗАДАЧ ПО ВЫБРАННОМУ ПРОЕКТУ                                                         ОК
    3.7.3 РЕАЛИЗОВАТЬ АВТОМАТИЧЕСКОЕ УДАЛЕНИЕ ЗАДАЧ ПРИ УДАЛЕНИИ ВЫБРАННОГО ПРОЕКТА                                     ОК
3.8 РЕКОМЕНДАЦИИ                                                                                                        ОК
    3.8.1 КЛАССЫ ПРЕДМЕТНОЙ ОБЛАСТИ ХРАНИТЬ В ПАКЕТЕ "entity"                                                           ОК
    3.8.2 ИСПОЛЬЗОВАТЬ ДЛЯ СОЕДИНЕНИЯ СУЩНОСТЕЙ СТРОЧНЫЕ ЗНАЧЕНИЯ С ГЕНЕРАЦИЕЙ ПО СТРАТЕГИИ UUID                        ОК

ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-04                                                                                              ОК

4.1 СОЗДАТЬ СЛОЙ РЕПОЗИТОРИЕВ В ПАКЕТЕ "repository"                                                                     ОК
    4.1.1 КЛАССЫ РЕПОЗИТОРИЕВ ДОЛЖНЫ ОТВЕЧАТЬ ЗА ОПЕРАЦИИ ЧТЕНИЯ И ЗАПИСИ ДАННЫХ В ПРИЛОЖЕНИИ                           ОК
    4.1.2 ДОСТУП К КЛАССАМ РЕПОЗИТОРИЕВ МОЖЕТ БЫТЬ ТОЛЬКО ЧЕРЕЗ СООТВЕТСТВУЮЩИЕ СЕРВИСЫ                                 ОК
    4.1.3 РЕПОЗИТОРИИ ДОЛЖНЫ БЫТЬ РАЗРАБОТАНЫ С ИСПОЛЬЗОВАНИЕМ СТРУКТУРЫ MAP                                            ОК
    4.1.4 РЕПОЗИТОРИИ ДОЛЖНЫ СОДЕРЖАТЬ СЛЕДУЮЩИЕ МЕТОДЫ "findAll", "findOne", "persist", "merge", "remove", "removeAll" ОК
4.2 СОЗДАТЬ СЛОЙ СЕРВИСОВ В ПАКЕТЕ "service"                                                                            ОК
    4.2.1 СЕРВИСЫ ДОЛЖНЫ ДЕЛЕГИРОВАТЬ ВЫЗОВЫ МЕТОДОВ ИЗ РЕПОЗИТОРИЕВ                                                    ОК
    4.2.2 СЕРВИСЫ ДОЛЖНЫ ПРОВОДИТЬ ПЕРВИЧНУЮ ПРОВЕРКУ ДАННЫХ НА ПУСТЫЕ ЗНАЧЕНИЯ СТРОК И NULL                            ОК
    4.2.3 СЛОЙ СЕРВИСОВ ДОЛЖЕН СОДЕРЖАТЬ БИЗНЕС ЛОГИКУ ПРИЛОЖЕНИЯ                                                       ОК
4.3 СОЗДАТЬ ЗАГРУЗЧИК ПРИЛОЖЕНИЯ НА БАЗЕ ОТДЕЛЬНОГО КЛАССА                                                              ОК
    4.3.1 КЛАСС ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ ДОЛЖЕН НАЗЫВАТЬСЯ "Bootstrap"                                                     ОК
    4.3.2 ЗАГРУЗЧИК ПРИЛОЖЕНИЯ ДОЛЖЕН ПРОИЗВОДИТЬ СОЗДАНИЕ ЭКЗЕМПЛЯРОВ РЕПОЗИТОРИЕВ И СЕРВИСОВ                          ОК
    4.3.3 ЗАГРУЗЧИК ПРИЛОЖЕНИЯ ДОЛЖЕН ОТВЕЧАТЬ ЗА ОБРАБОТКУ ТЕРМИНАЛЬНЫХ КОМАНД                                         ОК
4.4 РЕКОМЕНДАЦИИ                                                                                                        ОК
    4.4.1 РЕПОЗИТОРИИ И СЕРВИСЫ НЕ ДОЛЖНЫ СОДЕРЖАТЬ ИНСТРУКЦИИ РАБОТЫ С КОНСОЛЬЮ НА ВВОД / ВЫВОД                        ОК
    4.4.2 КАЖДАЯ СУЩНОСТЬ ПРИЛОЖЕНИЯ ДОЛЖНА ИМЕТЬ ПО ОДНОМУ РЕПОЗИТОРИЮ И СЕРВИСУ                                       ОК
    4.4.3 ЭКЗЕМПЛЯР РЕПОЗИТОРИЯ ДОЛЖЕН ПЕРЕДАВАТЬСЯ В КОНСТРУКТОР КЛАССА СЕРВИСА                                        ОК
    4.4.4 КЛАСС ТОЧКИ ВХОДА ПРИЛОЖЕНИЯ ДОЛЖЕН НАЗЫВАТЬСЯ "Application" И ВЫЗЫВАТЬ МЕТОД "init" ИЗ "Bootstrap"           ОК

5 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-05                                                                                            ОК

5.1 СОЗДАТЬ СЛОЙ КОМАНД                                                                                                 ОК
    5.1.1 СОЗДАТЬ ОТДЕЛЬНЫЙ КЛАСС ДЛЯ КАЖДОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ                                                       ОК
    5.1.2 КЛАСС КОМАНДЫ ДОЛЖЕН ИМЕТЬ СУФФИКС "Command"                                                                  ОК
    5.1.3 КЛАСС КОМАНДЫ ДЛЯ CRUD-ОПЕРАЦИИ ДОЛЖЕН НАЧИНАТЬСЯ С НАЗВАНИЯ СУЩНОСТИ                                         ОК
    5.1.4 КЛАСС КОМАНДЫ ДЛЯ CRUD-ОПЕРАЦИИ ДОЛЖЕН В НАЗВАНИИ СОДЕРЖАТЬ ИМЯ ОПЕРАЦИИ                                      ОК
    5.1.5 КЛАСС КОМАНДЫ ДОЛЖЕН БЫТЬ УНАСЛЕДОВАН ОТ КЛАССА АБСТРАКТНОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ                              ОК
    5.1.6 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "getName" ДЛЯ ВЫДАЧИ НАЗВАНИЯ КОМАНДЫ                            ОК
    5.1.7 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "getDescription" ДЛЯ ВЫДАЧИ ОПИСАНИЯ КОМАНДЫ                     ОК
    5.1.8 КЛАСС АБСТРАКТНОЙ КОМАНДЫ ДОЛЖЕН ИМЕТЬ МЕТОД "execute" ДЛЯ БЛОКА ИСПОЛНЯЕМЫХ ИНСТРУКЦИЙ                       ОК
5.2 РЕАЛИЗОВАТЬ РЕГИСТРАЦИЮ ТЕРМИНАЛЬНЫХ КОМАНД В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                                                 ОК
    5.2.1 ОРГАНИЗОВАТЬ ХРАНЕНИЕ ЭКЗЕМПЛЯРОВ КОМНАД НА БАЗЕ СТРУКТУРЫ MAP В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                        ОК
    5.2.2 ДЛЯ КЛЮЧА КОМАНДЫ В "MAP" ИСПОЛЬЗОВАТЬ НАЗВАНИЕ ТЕРМИНАЛЬНОЙ КОМАНДЫ                                          ОК
    5.2.3 ДЛЯ РЕГИСТРАЦИИ ЭКЗЕМПЛЯРОВ КОМАНД ИСПОЛЬЗОВАТЬ МЕТОД "init"                                                  ОК регистрации? просто добавление?
    5.2.4 ПЕРЕЙТИ НА ИСПОЛЬЗОВАНИЕ СТРУКТУРЫ "MAP" ВМЕСТО SWITCH-БЛОКА                                                  ОК
5.3 РЕКОМЕНДАЦИИ                                                                                                        ОК
    5.3.1 КЛАССЫ ТЕРМИНАЛЬНЫХ КОМАНД МОГУТ ОБРАЩАТЬСЯ ТОЛЬКО К СЕРВИСНОМУ УРОВНЮ                                        ОК
    5.3.2 КЛАССЫ ТЕРМИНАЛЬНЫХ КОМАНД НЕ МОГУТ ОСУЩЕСТВЛЯТЬ ВЫЗОВЫ РЕПОЗИТОРИЕВ                                          ОК
    5.3.3 КЛАССЫ КОМАНД ДОЛЖНЫ СОДЕРЖАТЬ ЛОГИКУ РАБОТЫ С ВВОДОМ / ВЫВОДОМ КОНСОЛИ ПРИЛОЖЕНИЯ                            ОК
    5.3.4 ПЕРЕДАВАТЬ ЗАГРУЗЧИК ПРИЛОЖЕНИЯ В КОНСТРУКТОР АБСТРАКТНОЙ КОМАНДЫ ДЛЯ ДОСТУПА К СЕРВИСАМ                      ОК

6 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-06                                                                                            ОК

6.1 ДОБАВИТЬ ПЕРЕЧИСЛЕНИЕ "ТИП РОЛИ"                                                                                    ОК
    6.1.1 РЕАЛИЗОВАТЬ ОТОБРАЖЕНИЕ ТИПА РОЛИ В ВИДЕ ЛОГИЧЕСКОГО НАЗВАНИЯ "displayName"                                   ОК
    6.1.2 ПРИЛОЖЕНИЕ ДОЛЖНО ПОДДЕРЖИВАТЬ ДВА ТИПА РОЛИ "АДМИНИСТРАТОР" И "ОБЫЧНЫЙ ПОЛЬЗОВАТЕЛЬ"                         ОК
6.2 ДОБАВИТЬ СУЩНОСТЬ "ПОЛЬЗОВАТЕЛЬ"
    6.2.1 ПОЛЬЗОВАТЕЛЬ ДОЛЖЕН ИМЕТЬ ПОЛЕ ЛОГИН И ХЕШ ПАРОЛЯ ДЛЯ РЕАЛИЗАЦИИ АВТОРИЗАЦИИ                                  ОК
    6.2.2 ПОЛЬЗОВАТЕЛЬ ДОЛЖЕН ИМЕТЬ ПОЛЕ С ТИПОМ РОЛИ                                                                   ОК
    6.2.3 СОЗДАТЬ РЕПОЗИТОРИЙ И СЕРВИС ДЛЯ СУЩНОСТИ "ПОЛЬЗОВАТЕЛЬ"                                                      ОК
    6.2.4 РЕАЛИЗОВАТЬ КОМАНДУ АВТОРИЗАЦИИ ПОЛЬЗОВАТЕЛЯ                                                                  ОК
    6.2.5 РЕАЛИЗОВАТЬ КОМАНДУ ЗАВЕРШЕНИЯ СЕАНСА ПОЛЬЗОВАТЕЛЯ                                                            ОК
    6.2.6 РЕАЛИЗОВАТЬ КОМАНДУ РЕГИСТРАЦИИ ПОЛЬЗОВАТЕЛЯ                                                                  ОК
    6.2.7 РЕАЛИЗОВАТЬ КОМАНДУ ОБНОВЛЕНИЯ ПАРОЛЯ ПОЛЬЗОВАТЕЛЯ                                                            ОК
    6.2.8 РЕАЛИЗОВАТЬ КОМАНДЫ ПРОСМОТРА И РЕДАКТИРОВАНИЯ ТЕКУЩЕГО ПРОФИЛЯ ПОЛЬЗОВАТЕЛЯ                                  ОК
    6.2.9 РЕАЛИЗОВАТЬ СОЗДАНИЕ ДВУХ ПРЕДОПРЕДЕЛЕННЫХ УЧЕТНЫХ ЗАПИСЕЙ ПОЛЬЗОВАТЕЛЕЙ С РАЗНЫМИ РОЛЯМИ                     ОК
    6.2.10 РЕАЛИЗОВАТЬ ПРИВЯЗКУ ПРОЕКТОВ И ЗАДАЧ К УЧЕТНОЙ ЗАПИСИ ПОЛЬЗОВАТЕЛЯ ЧЕРЕЗ ПОЛЕ "userId"                      ОК
    6.2.11 РАЗДЕЛИТЬ КОМАНДЫ НА БЕЗОПАСНЫЕ И ТРЕБУЮЩИЕ АВТОРИЗАЦИИ                                                      ОК
    6.2.12 ВСЕ CRUD-ОПЕРАЦИИ ДОЛЖНЫ ВЫПОЛНЯТСЯ ТОЛЬКО ПОСЛЕ АВТОРИЗАЦИИ ПОЛЬЗОВАТЕЛЯ В ПРИЛОЖЕНИИ                       ОК
6.3 РЕКОМЕНДАЦИИ                                                                                                        ОК
    6.3.1 ДОБАВИТЬ ВЫЗОВ СОЗДАНИЯ ПОЛЬЗОВАТЕЛЕЙ В МЕТОД ИНИЦИАЛИЗАЦИИ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                             ОК
    6.3.2 ДЛЯ ХЕШИРОВАНИЯ ПАРОЛЯ НЕОБХОДИМО ИСПОЛЬЗОВАТЬ MD5-АЛГОРИТМ                                                   ОК SHA-256 algorithm
    6.3.3 РЕАЛИЗОВАТЬ ХРАНЕНИЕ ТЕКУЩЕГО ПОЛЬЗОВАТЕЛЯ В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ                                            ОК
    6.3.4 ПРОВЕРИТЬ ИЗОЛЯЦИЮ ДАННЫХ ПО ПРОЕКТАМ И ЗАДАЧАМ МЕЖДУ РАЗНЫМИ УЧЕТНЫМИ ЗАПИСЯМИ                               OK

ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-07                                                                                              OK

7.1 РАЗРАБОТАТЬ ИНТЕРФЕЙСЫ ДЛЯ РЕПОЗИТОРИЕВ                                                                             OK
    7.1.1 ВЫНЕСТИ ВСЕ CRUD-ОПЕРАЦИИ РЕПОЗИТОРИЕВ В ИНТЕРФЕСЫ                                                            OK
7.2 РАЗРАБОТАТЬ ИНТЕРФЕЙСЫ ДЛЯ СЕРВИСОВ                                                                                 OK
    7.2.1 ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙСЫ РЕПОЗИТОРИЕВ В РЕАЛИЗАЦИИ СЕРВИСОВ                                                    OK
7.3 РАЗРАБОТАТЬ ИНТЕРФЕЙС ДЛЯ ЗАГРУЗЧИКА                                                                                OK
    7.3.1 СОЗДАТЬ ИНТЕРФЕЙС "ServiceLocator" ДЛЯ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                                                  OK
    7.3.2 ДОБАВИТЬ ДЕКЛАРАЦИЮ GET-МЕТОДОВ ДЛЯ ПОЛУЧЕНИЯ СЕРВИСОВ В ИНТЕРФЕЙС СЕРВИС ЛОКАТОРА                            OK
    7.3.3 РЕАЛИЗОВАТЬ ДОСТУП К СЕРВИСАМ ИЗ КОМАНД ТОЛЬКО ЧЕРЕЗ ИНТЕРФЕЙС СЕРВИС ЛОКАТОРА                                OK
7.4 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     OK
    7.4.1 ПРИМЕНИТЬ К КЛАССАМ, ПЕРЕМЕННЫМ И АРГУМЕНТАМ КЛЮЧЕВОЕ СЛОВО "final"                                           OK
    7.4.2 ВЫНЕСТИ ОБЩУЮ ЛОГИКУ СЕРВИСОВ И РЕПОЗИТОРИЕВ В АБСТРАКТНЫЕ КЛАССЫ                                             OK
    7.4.3 ПРИМЕНИТЬ ОБОБЩЕНИЯ ДЛЯ СЕРВИСОВ И РЕПОЗИТОРИЕВ С ЧАСТИ ИНТЕРФЕЙСОВ И РЕАЛИЗАЦИЙ                              OK
7.5 ДОБАВИТЬ ИНФОРМАЦИЮ О РАЗРАБОТЧИКЕ И ВЕРСИИ ПРИЛОЖЕНИЯ В МАНИФЕСТ                                                   OK
    7.5.1 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ ПОДСЧЕТА НОМЕРА ТЕКУЩЕЙ СБОРКИ И ПЕРЕДАТЬ НОМЕР В МАНИФЕСТ                        OK
    7.5.2 ПОДКЛЮЧИТЬ MAVEN-ЗАВИСИМОСТЬ ДЛЯ ЧТЕНИЯ ИНФОРМАЦИИ ИЗ ФАЙЛА "MANIFEST.MF"                                     OK  ?
    7.5.3 РЕАЛИЗОВАТЬ ТЕРМИНАЛЬНУЮ КОМАНДУ "about" ДЛЯ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ О СБОРКЕ ПРИЛОЖЕНИЯ                       OK
7.6 РЕКОМЕНДАЦИИ                                                                                                        OK
    7.6.1 ПРИ ДЕКЛАРАЦИИ ПЕРЕМЕННЫХ И КОНСТАНТ ВСЕГДА ИСПОЛЬЗОВАТЬ ИНТЕРФЕЙСЫ ПРИ ИХ НАЛИЧИИ                            OK  ?

8 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-08                                                                                            OK

8.1 ПРОВЕСТИ РЕФАКТОРИНГ ПРИЛОЖЕНИЯ                                                                                     OK
    8.1.1 ДОБАВИТЬ АННОТАЦИИ "@NotNull" И "@Nullable" ИЗ ПАКЕТА "JetBrains" ДЛЯ ВСЕХ ПАРАМЕТРОВ И ПЕРЕМЕННЫХ            OK
    8.1.2 ДОБАВИТЬ LOMBOK АННОТАЦИИ ДЛЯ ГЕНЕРАЦИИ КОНСТРУКТОРОВ И GET / SET МЕТОДОВ                                     OK
8.2 НАСТРОИТЬ СБОРКУ РЕЛИЗА ПРИЛОЖЕНИЯ                                                                                  OK
    8.2.1 ПРИЛОЖЕНИЕ ДОЛЖНО ЗАПУСКАТЬСЯ ИЗ КОНСОЛИ ВМЕСТЕ С ИСПОЛЬЗУЕМЫМИ ЗАВИСИМОСТЯМИ БЕЗ ОШИБОК                      OK
    8.2.2 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ КОПИРОВАНИЯ ВСЕХ ЗАВИСИМОСТЕЙ В СБОРОЧНУЮ ДИРЕКТОРИЮ "release/lib"                OK
    8.2.3 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ДЛЯ КОПИРОВАНИЯ СБОРКИ ПРИЛОЖЕНИЯ ДИРЕКТОРИЮ "release/bin"                            OK
8.3 ДОРАБОТАТЬ ТЕРМИНАЛЬНЫЕ КОМАНДЫ                                                                                     OK
    8.3.1 РЕАЛИЗОВАТЬ РЕГИСТРАЦИЮ КОМАНД С ИСПОЛЬЗОВАНИЕМ ПЕРЕЧИСЛЕНИЯ КЛАССОВ В МАССИВЕ                                OK
    8.3.2 РАЗМЕСТИТЬ МАССИВ С КЛАССАМИ ТЕРМИНАЛЬНЫХ КОМАНД В ТОЧКЕ ВХОДА В КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ                        OK
    8.3.3 ПЕРЕДАВАТЬ МАССИВ С КЛАССАМИ ТЕРМИНАЛЬНЫХ КОМАНД В МЕТОД ИНИЦИАЛИЗАЦИИ ЗАГРУЗЧИКА ПРИЛОЖЕНИЯ                  OK
    8.3.4 РАЗРАБОТАТЬ МЕТОД РЕГИСТРАЦИИ ТЕРМИНАЛЬНОЙ КОМАНДЫ В ЗАГРУЗЧИКИ ПРИЛОЖЕНИЯ ДЛЯ РАЗМЕЩЕНИЯ В СТРУКТУРЕ MAP     OK
    8.3.5 РЕАЛИЗОВАТЬ ПРОВЕРКУ РОДИТЕЛЬСКОГО КЛАССА ТЕРМИНАЛЬНОЙ КОМАНДЫ ПРИ РЕГИСТРАЦИИ В ЗАГРУЗЧИКЕ ПРИЛОЖЕНИЯ        OK
8.4 РЕКОМЕНДАЦИИ                                                                                                        OK
    8.4.1 РЕАЛИЗОВАТЬ СОЗДАНИЕ ТЕРМИНАЛЬНЫХ КОМАНД ПРИ РЕГИСТРАЦИИ ЧЕРЕЗ ВЫЗОВ МЕТОДА "newInstance" ИЗ КЛАССА КОМАНДЫ   OK
    8.4.2 РЕАЛИЗОВАТЬ ПЕРЕДАЧУ ССЫЛКИ НА СЕРВИС ЛОКАТОР В ТЕРМИНАЛЬНУЮ КОМАНДУ ЧЕРЕЗ ВЫЗОВ SET-МЕТОДА                   OK
    8.4.3 РЕАЛИЗОВАТЬ ТЕРМИНАЛЬНЫЙ СЕРВИС ДЛЯ ЗАХВАТА КОМАНД С КОНСОЛИ                                                  OK

9 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-09

9.1 РЕАЛИЗОВАТЬ СТАТУС ЗАДАЧ И ПРОЕКТОВ
    9.1.1 РАЗРАБОТАТЬ ПЕРЕЧИСЛЕНИЕ СТАТУСОВ ГОТОВНОСТИ СО ЗНАЧЕНИЯМИ (ЗАПЛАНИРОВАНО, В ПРОЦЕССЕ И ГОТОВО)
    9.1.2 РЕАЛИЗОВАТЬ ПОЛЕ "displayName" ДЛЯ ПЕРЕЧИСЛЕНИЯ СТАТУСОВ ГОТОВНОСТИ
    9.1.3 ИСПОЛЬЗОВАТЬ СТАТУС "ЗАПЛАНИРОВАНО" ДЛЯ НАЧАЛЬНОГО ЗНАЧЕНИЯ В СУЩНОСТЯХ ЗАДАЧИ И ПРОЕКТА
9.2 РЕАЛИЗОВАТЬ СОРТИРОВКУ ПРОЕКТОВ И ЗАДАЧ
    9.2.1 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ В ПОРЯДКЕ ИХ СОЗДАНИЯ В СИСТЕМЕ
    9.2.2 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО ДАТЕ НАЧАЛА
    9.2.3 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО ДАТЕ ОКОНЧАНИЯ
    9.2.4 РЕАЛИЗОВАТЬ ВОЗМОЖНОСТЬ ВЫВОДИТЬ ПРОЕКТЫ И ЗАДАЧИ ОТСОРТИРОВАННЫЕ ПО СТАТУСУ ГОТОВНОСТИ
9.3 РЕАЛИЗОВАТЬ ПОИСК ПРОЕКТОВ И ЗАДАЧ ПО ЧАСТИ НАЗВАНИЯ ИЛИ ОПИСАНИЯ
9.4 РЕАЛИЗОВАТЬ ОБРАБОТКУ ИСКЛЮЧЕНИЙ
    9.4.1 ДОБАВИТЬ ВЫБРОС ИСКЛЮЧЕНИЙ ИЗ МЕТОДА ВЫПОЛНЕНИЯ АБСТРАКТНОЙ ТЕРМИНАЛЬНОЙ КОМАНДЫ
    9.4.2 РЕАЛИЗОВАТЬ ЕДИНЫЙ БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ В ГЛАВНОЙ ПЕТЛЕ ПРИЛОЖЕНИЯ
9.5 РЕКОМЕНДАЦИИ
    9.5.1 РЕАЛИЗОВАТЬ ОБРАБОТКУ ИСКЛЮЧЕНИЙ БЕЗ ПРЕРЫВАНИЯ ВЫПОЛНЕНИЯ ОСНОВНОГО ПОТОКА

10 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-10

10.1 РЕАЛИЗОВАТЬ СОХРАНЕНИЕ ДАННЫХ
    10.1.1 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ СЕРИАЛИЗАЦИИ
    10.1.2 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И ТЕХНОЛОГИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ XML
    10.1.3 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И ТЕХНОЛОГИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ JSON
    10.1.4 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И БИБЛИОТЕКИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ XML
    10.1.5 РЕАЛИЗОВАТЬ КОМАНДУ СОХРАНЕНИЯ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И БИБЛИОТЕКИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ JSON
10.2 РЕАЛИЗОВАТЬ ЗАГРУЗКУ ДАННЫХ
    10.2.1 РЕАЛИЗОВАТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ СЕРИАЛИЗАЦИИ
    10.2.2 РЕАЛИЗОВАТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И ТЕХНОЛОГИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ XML
    10.2.3 РЕАЛИЗОВАТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И ТЕХНОЛОГИИ JAX-B В ТРАНСПОРТНОМ ФОРМАТЕ JSON
    10.2.4 РЕАЛИЗОВАТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И БИБЛИОТЕКИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ XML
    10.2.5 РЕАЛИЗОВАТЬ КОМАНДУ ЗАГРУЗКИ ПРЕДМЕТНОЙ ОБЛАСТИ С ИСПОЛЬЗОВАНИЕМ ЭКСТЕРНАЛТИЗАЦИИ И БИБЛИОТЕКИ FASTERXML В ТРАНСПОРТНОМ ФОРМАТЕ JSON
10.3 РЕКОМЕНДАЦИИ
    10.3.1 ПРИ ИСПОЛЬЗОВАНИИ ТРАНСПОРТНЫХ ФОРМАТОВ ДАННЫХ ПРИМЕНЯТЬ PRETTY ФОРМАТИРОВАНИЕ ДАННЫХ
    10.3.2 ПРИ ИСПОЛЬЗОВАНИИ ВНЕШНИХ ЭКСТЕРНАЛТИЗАТОРОВ ПРИМЕНЯТЬ РЕЖИМ ИГНОРИРОВАНИЯ НЕИЗВЕСТНЫХ АТРИБУТОВ БЕЗ ЖЕСТКОЙ ВАЛИДАЦИИ ДОКУМЕНТА

11 ПРАКТИЧЕСКОЕ ЗАДАНИЕ SE-11

11.1 СОЗДАТЬ АГРЕГАТОР МОДУЛЕЙ ПРИЛОЖЕНИЯ
    11.1.1 НАСТРОИТЬ СВЯЗИ МЕЖДУ АГРЕГАТОРОМ И ДОЧЕРНИМИ МОДУЛЯМИ
    11.1.2 ВЫНЕСТИ ОБЩИЕ НАСТРОЙКИ СБОРКИ ПРОЕКТОВ В МОДУЛЬ АГРЕГАТОРА
11.2 СОЗДАТЬ МОДУЛЬ СЕРВЕРНОГО ПРИЛОЖЕНИЯ
    11.2.1 РЕАЛИЗОВАТЬ ЗАГРУЗЧИК И СЕРВИС ЛОКАТОР ДЛЯ СЕРВЕРНОГО ПРИЛОЖЕНИЯ
    11.2.2 РЕАЛИЗОВАТЬ ДЛЯ КАЖДОЙ СУЩНОСТИ ОТДЕЛЬНУЮ ТОЧКУ ДОСТУПА
    11.2.3 ДЛЯ РЕАЛИЗАЦИИ ТОЧЕК ДОСТУПА ИСПОЛЬЗОВАТЬ ТЕХНОЛОГИЮ JAX-WS
    11.2.4 РЕАЛИЗОВАТЬ ДЕЛЕГИРОВАНИЕ ВЫЗОВОВ МЕТОДОВ ИЗ СЕРВИСОВ ЧЕРЕЗ СООТВЕТСТВУЮЩИЕ ТОЧКИ ДОСТУПА
11.3 СОЗДАТЬ МОДУЛЬ КЛИЕНТСКОГО ПРИЛОЖЕНИЯ
    11.3.1 РЕАЛИЗОВАТЬ ЗАГРУЗЧИК И СЕРВИС ЛОКАТОР ДЛЯ КЛИЕНТСКОГО ПРИЛОЖЕНИЯ
    11.3.2 ПЕРЕНЕСТИ ТЕРМИНАЛЬНЫЕ КОМАНДЫ В КОНСОЛЬНОЕ ПРИЛОЖЕНИЕ
    11.3.3 РЕАЛИЗОВАТЬ В КОНСОЛЬНЫХ КОМАНДАХ ВЫЗОВ ВЕБ СЕРВИСОВ ВМЕСТО СЕРВИСОВ
    11.3.4 ПОДКЛЮЧИТЬ MAVEN-ПЛАГИН ENUNCIATE ДЛЯ АВТОМАТИЧЕСКОЙ ГЕНЕРАЦИИ ДОКУМЕНТАЦИИ ПО WSDL
11.4 РЕАЛИЗОВАТЬ СЕТЕВУЮ АВТОРИЗАЦИЮ
    11.4.1 РЕАЛИЗОВАТЬ ХРАНЕНИЕ СЕССИИ В ВИДЕ СУЩНОСТИ
    11.4.2 РЕАЛИЗОВАТЬ ПОДПИСЬ СЕССИИ НА СЕРВЕРЕ
    11.4.3 РЕАЛИЗОВАТЬ ПРОВЕРКУ СЕССИИ И РОЛЕЙ НЕ СЕРВЕРЕ
11.5 РЕКОМЕНДАЦИИ
    11.5.1 НЕОБХОДИМО ИСПОЛЬЗОВАТЬ УНИКАЛЬНЫЕ НАЗВАНИЯ МЕТОДОВ В ТОЧКАХ ДОСТУПА В РАМКАХ ПРИЛОЖЕНИЯ
    11.5.2 КОМАНДЫ СОХРАНЕНИЯ И ЗАГРУЗКИ ДАННЫХ ДОЛЖНЫ ВЫПОЛНЯТЬСЯ ОТ РОЛИ АДМИНИСТРАТОРА
    11.5.3 РЕАЛИЗОВАТЬ ПЕРЕДАЧУ ОБЪЕКТА СЕССИИ В ВЕБ-МЕТОДЕ ПЕРВЫМ ПАРАМЕТРОМ